CLUSTER_NAME="browser-kube-e2e" 

.PHONY: kind
kind:
	kind get kubeconfig --name $(CLUSTER_NAME) || kind create cluster --name $(CLUSTER_NAME)

.PHONY: kind
kubeconfig.yaml: kind
	kind get kubeconfig --name $(CLUSTER_NAME) > kubeconfig.yaml

# skaffold deploys the virtual-kubelet to the Kubernetes cluster targeted by the current kubeconfig using skaffold.
# The current context (as indicated by "kubectl config current-context") must be one of "minikube" or "docker-for-desktop".
# MODE must be set to one of "dev" (default), "delete" or "run", and is used as the skaffold command to be run.
.PHONY: skaffold
skaffold: MODE ?= dev
.SECONDEXPANSION:
skaffold: skaffold/$$(MODE)

.PHONY: skaffold/%
skaffold/%: PROFILE := local
skaffold/%:
	skaffold $(*) \
		-f $(PWD)/hack/skaffold/virtual-kubelet/skaffold.yml \
		-p $(PROFILE)

skaffold/run skaffold/dev: bin/e2e/virtual-kubelet

bin/e2e:
	@mkdir -p bin/e2e

bin/e2e/virtual-kubelet: bin/e2e
	GOOS=linux GOARCH=amd64 $(MAKE) OUTPUT_DIR=$(@D) build

.PHONY: e2e
e2e: KUBECONFIG ?= $(HOME)/.kube/config
e2e: NAMESPACE := default
e2e: NODE_NAME := vkubelet-browser
e2e: export VK_BUILD_TAGS += browser_provider
e2e: e2e.clean bin/e2e/virtual-kubelet skaffold/run
	@echo Running tests...
	cd $(PWD)/internal/test/e2e && go test -v -timeout 5m -tags e2e ./... \
		-kubeconfig=$(KUBECONFIG) \
		-namespace=$(NAMESPACE) \
		-node-name=$(NODE_NAME)
	@$(MAKE) e2e.clean

.PHONY: e2e.clean
e2e.clean: NODE_NAME ?= vkubelet-browser
e2e.clean: skaffold/delete
	kubectl delete --ignore-not-found node $(NODE_NAME); \
	if [ -f bin/e2e/virtual-kubelet ]; then  rm bin/e2e/virtual-kubelet; fi

.PHONY: kindE2E
kindE2E: kubeconfig.yaml
kindE2E: KUBECONFIG = $(PWD)/kubeconfig.yaml
kindE2E: e2e

.PHONY: kindE2E.clean
kindE2E.clean: 
	rm kubeconfig.yaml && kind delete cluster --name $(CLUSTER_NAME)
